#!perl

use 5.010;
use strict;
use warnings;

use App::ProgUtils;
use Perinci::CmdLine::Any;

# AUTHORITY
# DATE
# DIST
# VERSION

our %SPEC;

$SPEC{proglist} = {
    v => 1.1,
    summary => 'List programs matching query',
    args => {
        query => {
            schema => 're*',
            req => 0,
            pos => 0,
        },
        type => {
            schema => ['str*', in=>[qw/script binary/]],
        },
    },
    examples => [
        {
            summary => 'List all programs',
            argv => [],
            test => 0,
            'x.doc.show_result'=>0,
        },
        {
            summary => 'List all binaries that have "font" in their name',
            argv => [qw/font --type=binary/],
            test => 0,
            'x.doc.show_result'=>0,
        },
        {
            summary => 'List all scripts that have "csv" in their name',
            argv => [qw/csv --type=script/],
            test => 0,
            'x.doc.show_result'=>0,
        },
    ],
    links => [
        {url=>'prog:list-all-programs-in-path'},
        {url=>'prog:scriptlist'},
    ],
};
sub proglist {
    require File::Which;

    my %args = @_;

    my $re = $args{query} || qr//;

    my @res;
    for my $dir (split /:/, $ENV{PATH}) {
        opendir my $dh, $dir or next;
        for my $e (readdir $dh) {
            next if $e eq '.' || $e eq '..';
            next if -d $e;
            next unless $e =~ $re;
            if ($args{type}) {
                my $is_bin = -B "$dir/$e";
                next if $args{type} eq 'script' &&  $is_bin;
                next if $args{type} eq 'binary' && !$is_bin;
            }
            push @res, $e;
        }
    }
    [200, "OK", \@res];
}

Perinci::CmdLine::Any->new(
    url => '/main/proglist',
    read_config => 0,
    read_env => 0,
)->run;

# ABSTRACT:
# PODNAME:
